<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                 http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                 http://www.springframework.org/schema/security
                 http://www.springframework.org/schema/security/spring-security-4.1.xsd">

<!--<beans:beans xmlns="http://www.springframework.org/schema/security"-->
         <!--xmlns:beans="http://www.springframework.org/schema/beans"-->
         <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
         <!--xsi:schemaLocation="http://www.springframework.org/schema/beans-->
         <!--http://www.springframework.org/schema/beans/spring-beans.xsd-->
        <!--http://www.springframework.org/schema/security-->
        <!--http://www.springframework.org/schema/security/spring-security.xsd">-->


<!--<http access-denied-page="/loginError.jsp">-->
    <http use-expressions="true" auto-config="true"> <!-- if html contains nothing, add "auto-config='true'"-->
        <!--use-expressions="false" в версии 4.1-->
        <csrf disabled="true"/>


    <intercept-url pattern="/" access="isAuthenticated()"/>
    <intercept-url pattern="/addEmployee" access="hasRole('ROLE_ADMIN')"/>
    <intercept-url pattern="/showEmployeeList" access="hasRole('ROLE_ADMIN')"/>
    <intercept-url pattern="/deleteEmployee" access="hasRole('ROLE_ADMIN')"/>
    <intercept-url pattern="/showPlan" access="hasRole('ROLE_ADMIN')"/>
    <intercept-url pattern="/addPlan" access="hasRole('ROLE_ADMIN')"/>

    <intercept-url pattern="/showChangePassAndLoginView" access="hasRole('ROLE_USER')"/>
    <intercept-url pattern="/changePassAndLogin" access="hasRole('ROLE_USER')"/>
    <intercept-url pattern="/userPage" access="hasRole('ROLE_USER')"/>
    <intercept-url pattern="/userPlanView" access="hasRole('ROLE_USER')"/>

    <!--<intercept-url pattern="/userLogon" access="hasRole('ROLE_USER', 'ROLE_ANONYMOUS',ROLE_ADMIN"/>-->


    <!--<form-login login-page="/login"-->
                 <!--authentication-failure-url="/login"-->
        <!--username-parameter="username"-->
        <!--password-parameter="password"-->

    <!--/>-->

    <form-login
        username-parameter="username"
        password-parameter="password"
    />



    <logout logout-url="/userLogout" logout-success-url="/"/>
    <anonymous username="guest" granted-authority="ROLE_ANONYMOUS"/>
    <remember-me/>

</http>

    <!--нет spring-database.xml-->
<!--<authentication-manager>-->
    <!--<authentication-provider>-->
        <!--<user-service>-->
            <!--<user name="admin" password="admin" authorities="ROLE_ADMIN"/>-->
            <!--<user name="aisina" password="aisina" authorities="ROLE_USER"/>-->
            <!--<user name="ais" password="ais" authorities="ROLE_USER"/>-->
        <!--</user-service>-->
    <!--</authentication-provider>-->
<!--</authentication-manager>-->

    <beans:import resource="spring-database.xml"/>
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "select login as username, password, 'true' as enabled from users where login=?"
                               authorities-by-username-query=
                                       "select username, role from user_roles where username =? " />

            <password-encoder ref="passwordEncoder" />
        </authentication-provider>

    </authentication-manager>

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

</beans:beans>